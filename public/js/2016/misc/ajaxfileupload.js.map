{"version":3,"sources":["ajaxfileupload.js"],"names":[],"mappingsfile":"ajaxfileupload.js","sourcesContent":["\njQuery.extend({\n\t\n\n    createUploadIframe: function(id, uri)\n\t{\n\t\t\t//create frame\n            var frameId = 'jUploadFrame' + id;\n            var iframeHtml = '<iframe id=\"' + frameId + '\" name=\"' + frameId + '\" style=\"position:absolute; top:-9999px; left:-9999px\"';\n\t\t\tif(window.ActiveXObject)\n\t\t\t{\n                if(typeof uri== 'boolean'){\n\t\t\t\t\tiframeHtml += ' src=\"' + 'javascript:false' + '\"';\n\n                }\n                else if(typeof uri== 'string'){\n\t\t\t\t\tiframeHtml += ' src=\"' + uri + '\"';\n\n                }\t\n\t\t\t}\n\t\t\tiframeHtml += ' />';\n\t\t\tjQuery(iframeHtml).appendTo(document.body);\n\n            return jQuery('#' + frameId).get(0);\t\t\t\n    },\n    createUploadForm: function(id, fileElementId, data)\n\t{\n\t\t//create form\t\n\t\tvar formId = 'jUploadForm' + id;\n\t\tvar fileId = 'jUploadFile' + id;\n\t\tvar form = jQuery('<form  action=\"\" method=\"POST\" name=\"' + formId + '\" id=\"' + formId + '\" enctype=\"multipart/form-data\"></form>');\t\n\t\tif(data)\n\t\t{\n\t\t\tfor(var i in data)\n\t\t\t{\n\t\t\t\tjQuery('<input type=\"hidden\" name=\"' + i + '\" value=\"' + data[i] + '\" />').appendTo(form);\n\t\t\t}\t\t\t\n\t\t}\t\t\n\t\tvar oldElement = jQuery('#' + fileElementId);\n\t\tvar newElement = jQuery(oldElement).clone();\n\t\tjQuery(oldElement).attr('id', fileId);\n\t\tjQuery(oldElement).before(newElement);\n\t\tjQuery(oldElement).appendTo(form);\n\n\n\t\t\n\t\t//set attributes\n\t\tjQuery(form).css('position', 'absolute');\n\t\tjQuery(form).css('top', '-1200px');\n\t\tjQuery(form).css('left', '-1200px');\n\t\tjQuery(form).appendTo('body');\t\t\n\t\treturn form;\n    },\n\n    ajaxFileUpload: function(s) {\n        // TODO introduce global settings, allowing the client to modify them for all requests, not only timeout\t\t\n        s = jQuery.extend({}, jQuery.ajaxSettings, s);\n        var id = new Date().getTime()        \n\t\tvar form = jQuery.createUploadForm(id, s.fileElementId, (typeof(s.data)=='undefined'?false:s.data));\n\t\tvar io = jQuery.createUploadIframe(id, s.secureuri);\n\t\tvar frameId = 'jUploadFrame' + id;\n\t\tvar formId = 'jUploadForm' + id;\t\t\n        // Watch for a new set of requests\n        if ( s.global && ! jQuery.active++ )\n\t\t{\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}            \n        var requestDone = false;\n        // Create the request object\n        var xml = {}   \n        if ( s.global )\n            jQuery.event.trigger(\"ajaxSend\", [xml, s]);\n        // Wait for a response to come back\n        var uploadCallback = function(isTimeout)\n\t\t{\t\t\t\n\t\t\tvar io = document.getElementById(frameId);\n            try \n\t\t\t{\t\t\t\t\n\t\t\t\tif(io.contentWindow)\n\t\t\t\t{\n\t\t\t\t\t xml.responseText = io.contentWindow.document.body?io.contentWindow.document.body.innerHTML:null;\n                \t xml.responseXML = io.contentWindow.document.XMLDocument?io.contentWindow.document.XMLDocument:io.contentWindow.document;\n\t\t\t\t\t \n\t\t\t\t}else if(io.contentDocument)\n\t\t\t\t{\n\t\t\t\t\t xml.responseText = io.contentDocument.document.body?io.contentDocument.document.body.innerHTML:null;\n                \txml.responseXML = io.contentDocument.document.XMLDocument?io.contentDocument.document.XMLDocument:io.contentDocument.document;\n\t\t\t\t}\t\t\t\t\t\t\n            }catch(e)\n\t\t\t{\n\t\t\t\tjQuery.handleError(s, xml, null, e);\n\t\t\t}\n            if ( xml || isTimeout == \"timeout\") \n\t\t\t{\t\t\t\t\n                requestDone = true;\n                var status;\n                try {\n                    status = isTimeout != \"timeout\" ? \"success\" : \"error\";\n                    // Make sure that the request was successful or notmodified\n                    if ( status != \"error\" )\n\t\t\t\t\t{\n                        // process the data (runs the xml through httpData regardless of callback)\n                        var data = jQuery.uploadHttpData( xml, s.dataType );    \n                        // If a local callback was specified, fire it and pass it the data\n                        if ( s.success )\n                            s.success( data, status );\n    \n                        // Fire the global callback\n                        if( s.global )\n                            jQuery.event.trigger( \"ajaxSuccess\", [xml, s] );\n                    } else\n                        jQuery.handleError(s, xml, status);\n                } catch(e) \n\t\t\t\t{\n                    status = \"error\";\n                    jQuery.handleError(s, xml, status, e);\n                }\n\n                // The request was completed\n                if( s.global )\n                    jQuery.event.trigger( \"ajaxComplete\", [xml, s] );\n\n                // Handle the global AJAX counter\n                if ( s.global && ! --jQuery.active )\n                    jQuery.event.trigger( \"ajaxStop\" );\n\n                // Process result\n                if ( s.complete )\n                    s.complete(xml, status);\n\n                jQuery(io).unbind()\n\n                setTimeout(function()\n\t\t\t\t\t\t\t\t\t{\ttry \n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tjQuery(io).remove();\n\t\t\t\t\t\t\t\t\t\t\tjQuery(form).remove();\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t} catch(e) \n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tjQuery.handleError(s, xml, null, e);\n\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t}, 100)\n\n                xml = null\n\n            }\n        }\n        // Timeout checker\n        if ( s.timeout > 0 ) \n\t\t{\n            setTimeout(function(){\n                // Check to see if the request is still happening\n                if( !requestDone ) uploadCallback( \"timeout\" );\n            }, s.timeout);\n        }\n        try \n\t\t{\n\n\t\t\tvar form = jQuery('#' + formId);\n\t\t\tjQuery(form).attr('action', s.url);\n\t\t\tjQuery(form).attr('method', 'POST');\n\t\t\tjQuery(form).attr('target', frameId);\n            if(form.encoding)\n\t\t\t{\n\t\t\t\tjQuery(form).attr('encoding', 'multipart/form-data');      \t\t\t\n            }\n            else\n\t\t\t{\t\n\t\t\t\tjQuery(form).attr('enctype', 'multipart/form-data');\t\t\t\n            }\t\t\t\n            jQuery(form).submit();\n\n        } catch(e) \n\t\t{\t\t\t\n            jQuery.handleError(s, xml, null, e);\n        }\n\t\t\n\t\tjQuery('#' + frameId).load(uploadCallback\t);\n        return {abort: function () {}};\t\n\n    },\n\n    uploadHttpData: function( r, type ) {\n        var data = !type;\n        data = type == \"xml\" || data ? r.responseXML : r.responseText;\n        // If the type is \"script\", eval it in global context\n        if ( type == \"script\" )\n            jQuery.globalEval( data );\n        // Get the JavaScript object, if JSON is used.\n        if ( type == \"json\" )\n            eval( \"data = \" + data );\n        // evaluate scripts within html\n        if ( type == \"html\" )\n            jQuery(\"<div>\").html(data).evalScripts();\n\n        return data;\n    }\n})\n\n"],"sourceRoot":"/source/"}